{"ast":null,"code":"import axios from 'axios';\nexport const GET_COUNTRY = 'GET_COUNTRY';\nexport const GET_COUNTRY_NAME = 'GET_COUNTRY_NAME';\nexport const GET_DETAILS = 'GET_DETAILS;';\nexport const ORDER_BY_COUNTRY = 'ORDER_BY_COUNTRY';\nexport const FILTER_BY_CONTINENT = 'FILTER_BY_CONTINENT';\nexport const FILTER_BY_POPULATION = 'FILTER_BY_POPULATION';\nexport const GET_ONLY_COUNTRIES = 'GET_ONLY_COUNTRIES';\nexport const GET_TOUR_ACTIVITY = 'GET_TOUR_ACTIVITY';\nexport const COUNTRY_BY_ACTIVITY = 'COUNTRY_BY_ACTIVITY';\nexport function getCountry() {\n  return async function (dispatch) {\n    try {\n      var jsonCountry = await axios.get('http://localhost:3001/api/Country');\n      return dispatch({\n        type: \"GET_COUNTRY\",\n        payload: jsonCountry.data\n      });\n    } catch (error) {// console.log(error)\n    }\n  };\n}\nexport function getCountryName(name) {\n  return async function (dispatch) {\n    try {\n      var jsonName = await axios.get('http://localhost:3001/api/Country?name=' + name);\n      return dispatch({\n        type: \"GET_COUNTRY_NAME\",\n        payload: jsonName.data\n      });\n    } catch (error) {\n      console.log(error);\n      alert(\"Pais no existe\");\n    }\n  };\n}\nexport function getDetails(id) {\n  return async function (dispatch) {\n    try {\n      var jsonDetail = await axios.get('http://localhost:3001/api/Country/' + id);\n      return dispatch({\n        type: GET_DETAILS,\n        payload: jsonDetail.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function orderByCountry(payload) {\n  return {\n    type: \"ORDER_BY_COUNTRY\",\n    payload\n  };\n}\nexport function filterCountryByContinent(payload) {\n  return {\n    type: \"FILTER_BY_CONTINENT\",\n    payload\n  };\n}\nexport function filterCountryByPopulation(payload) {\n  return {\n    type: \"FILTER_BY_POPULATION\",\n    payload\n  };\n}\nexport function getOnlyCountries() {\n  return async function (dispatch) {\n    try {\n      var jsonOnlyCountry = await axios.get('http://localhost:3001/api/AllCountries');\n      return dispatch({\n        type: \"GET_ONLY_COUNTRIES\",\n        payload: jsonOnlyCountry.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function postTourActivity(payload) {\n  console.log(\"ActionPay \" + payload);\n  return async function (dispatch) {\n    try {\n      var jsonTourActivity = await axios.post('http://localhost:3001/api/TourActivity', payload);\n      return dispatch({\n        type: \"GET_TOUR_ACTIVITY\",\n        payload: jsonTourActivity.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getTourActivity() {\n  return async function (dispatch) {\n    try {\n      const jsonActTour = await axios.get('http://localhost:3001/api/TourActivity');\n      return dispatch({\n        type: \"GET_TOUR_ACTIVITY\",\n        payload: jsonActTour.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function countryByActivity(payload) {\n  console.log(\"pay \" + payload);\n  return {\n    type: \"COUNTRY_BY_ACTIVITY\",\n    payload\n  };\n}\n;","map":{"version":3,"names":["axios","GET_COUNTRY","GET_COUNTRY_NAME","GET_DETAILS","ORDER_BY_COUNTRY","FILTER_BY_CONTINENT","FILTER_BY_POPULATION","GET_ONLY_COUNTRIES","GET_TOUR_ACTIVITY","COUNTRY_BY_ACTIVITY","getCountry","dispatch","jsonCountry","get","type","payload","data","error","getCountryName","name","jsonName","console","log","alert","getDetails","id","jsonDetail","orderByCountry","filterCountryByContinent","filterCountryByPopulation","getOnlyCountries","jsonOnlyCountry","postTourActivity","jsonTourActivity","post","getTourActivity","jsonActTour","countryByActivity"],"sources":["C:/Users/fabia/OneDrive/Documentos/HENRY/PI_2022/API-Countries/client/src/redux/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\nexport const GET_COUNTRY = 'GET_COUNTRY';\r\nexport const GET_COUNTRY_NAME = 'GET_COUNTRY_NAME';\r\nexport const GET_DETAILS = 'GET_DETAILS;'\r\nexport const ORDER_BY_COUNTRY = 'ORDER_BY_COUNTRY';\r\nexport const FILTER_BY_CONTINENT = 'FILTER_BY_CONTINENT';\r\nexport const FILTER_BY_POPULATION = 'FILTER_BY_POPULATION';\r\nexport const GET_ONLY_COUNTRIES = 'GET_ONLY_COUNTRIES';\r\nexport const GET_TOUR_ACTIVITY = 'GET_TOUR_ACTIVITY';\r\nexport const COUNTRY_BY_ACTIVITY = 'COUNTRY_BY_ACTIVITY';\r\n\r\nexport function getCountry(){\r\n  return async function (dispatch){\r\n    try{\r\n        var jsonCountry = await axios.get('http://localhost:3001/api/Country');\r\n          return dispatch({\r\n            type: \"GET_COUNTRY\",\r\n            payload: jsonCountry.data\r\n          })\r\n    } catch (error){\r\n      // console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport function getCountryName(name){\r\n  return async function (dispatch){\r\n    try{\r\n        var jsonName = await axios.get('http://localhost:3001/api/Country?name=' + name);\r\n          return dispatch({\r\n            type: \"GET_COUNTRY_NAME\",\r\n            payload: jsonName.data\r\n          })\r\n    } catch (error){\r\n      console.log(error);\r\n      alert(\"Pais no existe\");\r\n    }\r\n  }\r\n}\r\n\r\nexport function getDetails(id){\r\n  return async function(dispatch){\r\n    try{\r\n        var jsonDetail = await axios.get('http://localhost:3001/api/Country/' + id);\r\n          return dispatch({\r\n            type: GET_DETAILS,\r\n            payload: jsonDetail.data\r\n          })\r\n    } catch (error){\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport function orderByCountry(payload){\r\n  return {\r\n    type: \"ORDER_BY_COUNTRY\",\r\n    payload\r\n  }\r\n}\r\n\r\nexport function filterCountryByContinent(payload){\r\n  return {\r\n    type: \"FILTER_BY_CONTINENT\",\r\n    payload\r\n  }\r\n}\r\n\r\nexport function filterCountryByPopulation(payload){\r\n  return {\r\n    type: \"FILTER_BY_POPULATION\",\r\n    payload\r\n  }\r\n}\r\n\r\nexport function getOnlyCountries(){\r\n  return async function(dispatch){\r\n    try{\r\n      var jsonOnlyCountry = await axios.get('http://localhost:3001/api/AllCountries');\r\n        return dispatch({\r\n            type: \"GET_ONLY_COUNTRIES\",\r\n            payload: jsonOnlyCountry.data\r\n        })\r\n    } catch (error){\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport function postTourActivity(payload){\r\n  console.log(\"ActionPay \" + payload);\r\n  return async function (dispatch){\r\n    try{\r\n      var jsonTourActivity = await axios.post('http://localhost:3001/api/TourActivity', payload);\r\n        return dispatch({\r\n          type: \"GET_TOUR_ACTIVITY\",\r\n          payload: jsonTourActivity.data\r\n        })\r\n    } catch (error){\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport function getTourActivity(){\r\n  return async function(dispatch){\r\n    try{\r\n      const jsonActTour = await axios.get('http://localhost:3001/api/TourActivity');\r\n        return dispatch({\r\n          type: \"GET_TOUR_ACTIVITY\",\r\n          payload: jsonActTour.data\r\n        })\r\n\r\n    } catch (error){\r\n      console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport function countryByActivity(payload) {\r\n  console.log(\"pay \" + payload);\r\n  return {\r\n      type: \"COUNTRY_BY_ACTIVITY\",\r\n      payload\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}